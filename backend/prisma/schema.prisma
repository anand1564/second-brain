// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  googleId   String  @id @default(uuid())
  email      String  @unique
  name       String
  profilePic String?
  createdAt  DateTime @default(now())
  content    Content[]
}


model Tag {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  content ContentTag[]
}

model Link {
  hash        String @id
  url         String @unique
  description String
}

model Content {
  id          Int      @id @default(autoincrement())
  title       String
  type        String   @default("text")
  description String
  link        String?
  document    String?
  tags        ContentTag[]
  user        User     @relation(fields: [userId], references: [googleId])
  userId      String
  createdAt   DateTime @default(now())
}

model ContentTag {
  contentId Int
  tagId     Int
  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([contentId, tagId]) // Composite primary key for many-to-many relation
}

