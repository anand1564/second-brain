generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id @default(uuid())
  email      String  @unique
  password   String
  name       String
  profilePic String?
  createdAt  DateTime @default(now())
  content    Content[]
  tags       Tag[]
}

model Tag {
  id      Int      @id @default(autoincrement())
  name    String
  userId  String  // Associate each tag with a user
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  content ContentTag[]

  @@unique([name, userId])  // Ensure a user can only create a tag once, but different users can have the same tag
}


model Content {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  textContent String?  // For plain text
  url         String?  // For links (YouTube, X, Drive, etc.)
  filePath    String?  // For uploaded files (PDFs, images)
  tags        ContentTag[]
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
}

model ContentTag {
  contentId Int
  tagId     Int
  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([contentId, tagId]) // Composite primary key for many-to-many relation
}